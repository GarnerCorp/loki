# annotations -- use this field if you want to provide annotations to every StatefulSet/DaemonSet/ReplicaSet in this chart.
annotations: {}
# podAnnotations -- use this field if you want to provide podAnnotations to every pod in this chart.
podAnnotations: {}

loki:
  # loki.image -- Image repository for Loki images.
  image: grafana/loki:1.6.1
  # loki.pullPolicy -- Image pull policy for Loki images.
  pullPolicy: IfNotPresent

memberlist:
  # memberlist.enable -- Enable the ring to be a Memberslist. This will disable consul.
  enable: false
  # memberlist.rejoin -- How often to rejoin the cluster.
  rejoin: 5m
  # memberlist.port -- Port to listen on for gossip messages.
  port: 7946

consul:
  # consul.image -- Image repository for the Consul images.
  image: consul:1.5.3
  # consul.pullPolicy -- Image pull policy for the Consul images.
  pullPolicy: IfNotPresent
  # consul.resources -- Custom resources for the Consul deployment.
  resources: {}
  # consul.tolerations -- Add tolerations for pod assignment
  tolerations: []
  # consul.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # consul.affinity -- Replace default affinity with custom affinity
  affinity: {}

distributor:
  # distributor.replicaCount -- Number of replicas for the Distributor deployment.
  replicaCount: 3
  # distributor.resources -- Custom resources for the Distributor deployment.
  resources: {}
  # distributor.env -- Allow Extra env variables into the deployment
  env: []
  # distributor.extraVolumeMounts -- Allow Extra volume mounts into the deployment
  extraVolumeMounts: []
  # distributor.extraVolumes -- Allow Extra volumes into the deployment
  extraVolumes: []
  # distributor.tolerations -- Add tolerations for pod assignment
  tolerations: []
  # distributor.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # distributor.affinity -- Replace default affinity with custom affinity
  affinity: {}

gateway:
  # gateway.replicaCount -- Number of replicas for the Gateway deployment.
  replicaCount: 3
  # gateway.image -- Image repository for the Gateway images.
  image: nginx:1.18.0-alpine
  # gateway.pullPolicy -- Image pull policy for the Gateway images.
  pullPolicy: IfNotPresent
  # gateway.resources -- Custom resources for the Gateway deployment.
  resources: {}
  # gateway.env -- Allow Extra env variables into the deployment
  env: []
  # gateway.extraVolumeMounts -- Allow Extra volume mounts into the deployment
  extraVolumeMounts: []
  # gateway.extraVolumes -- Allow Extra volumes into the deployment
  extraVolumes: []
  service:
    # gateway.service.annotations -- Annotations to apply on gateway service
    annotations: {}
    # gateway.service.type -- Service type
    type: ClusterIP
  ingress:
    # gateway.ingress.enabled -- Enable Ingress for your gateway deployment
    enabled: false
    # gateway.ingress.annotations --
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    host: chart-example.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  # gateway.tolerations -- Add tolerations for pod assignment
  tolerations: []
  # gateway.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # gateway.affinity -- Replace default affinity with custom affinity
  affinity: {}

ingester:
  # ingester.replicaCount -- Number of replicas for the Ingester deployment.
  replicaCount: 3
  # ingester.resources -- Custom resources for the Ingester deployment.
  resources: {}
  # ingester.env -- Allow Extra env variables into the deployment
  env: []
  # ingester.extraVolumeMounts -- Allow Extra volume mounts into the deployment
  extraVolumeMounts: []
  # ingester.extraVolumes -- Allow Extra volumes into the deployment
  extraVolumes: []
  # ingester.tolerations -- Add tolerations for pod assignment
  tolerations: []
  # ingester.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # ingester.affinity -- Replace default affinity with custom affinity
  affinity: {}

memcached:
  # memcached.replicaCount -- Number of replicas for the Memcached deployment.
  replicaCount: 3
  # memcached.image -- Image repository for the Memcached images.
  image: memcached:1.6.7-alpine
  # memcached.pullPolicy -- Image pull policy for the Memcached images.
  pullPolicy: IfNotPresent
  # memcached.resources -- Custom resources for the Memcached deployment.
  resources: {}
  # memcached.tolerations -- Add tolerations for pod assignment
  tolerations: []
  # memcached.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # memcached.affinity -- Replace default affinity with custom affinity
  affinity: {}

memcachedFrontend:
  # memcachedFrontend.replicaCount -- Number of replicas for the Memcached-frontend deployment.
  replicaCount: 3
  # memcachedFrontend.resources -- Custom resources for the Memcached-frontend deployment.
  resources: {}
  # memcachedFrontend.tolerations -- Add tolerations for pod assignment
  tolerations: []
  # memcachedFrontend.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # memcachedFrontend.affinity -- Replace default affinity with custom affinity
  affinity: {}

memcachedIndexQueries:
  # memcachedIndexQueries.replicaCount -- Number of replicas for the Memcached-index-queries deployment.
  replicaCount: 3
  # memcachedIndexQueries.resources -- Custom resources for the Memcached-index-queries deployment.
  resources: {}
  # memcachedIndexQueries.tolerations -- Add tolerations for pod assignment
  tolerations: []
  # memcachedIndexQueries.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # memcachedIndexQueries.affinity -- Add custom affinity to deployment
  affinity: {}

memcachedIndexWrites:
  # memcachedIndexWrites.replicaCount -- Number of replicas for the Memcached-index-writes deployment.
  replicaCount: 3
  # memcachedIndexWrites.resources -- Custom resources for the Memcached-index-writes deployment.
  resources: {}
  # memcachedIndexWrites.tolerations -- Add tolerations for pod assignment
  tolerations: []
  # memcachedIndexWrites.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # memcachedIndexWrites.affinity -- Replace default affinity with custom affinity
  affinity: {}

querier:
  # querier.replicaCount -- Number of replicas for the Querier deployment.
  replicaCount: 3
  # querier.resources -- Custom resources for the Querier deployment.
  resources: {}
  # querier.env -- Allow Extra env variables into the deployment
  env: []
  # querier.extraVolumeMounts -- Allow Extra volume mounts into the deployment
  extraVolumeMounts: []
  # querier.extraVolumes -- Allow Extra volumes into the deployment
  extraVolumes: []
  # querier.tolerations -- Add tolerations for pod assignment
  tolerations: []
  # querier.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # querier.affinity -- Replace default affinity with custom affinity
  affinity: {}

querierFrontend:
  # querierFrontend.replicaCount -- Number of replicas for the Querier-frontend deployment.
  replicaCount: 2
  # querierFrontend.resources -- Customer resources for the Querier-frontend deployment.
  resources: {}
  # querierFrontend.env -- Allow Extra env variables into the deployment
  env: []
  # querierFrontend.extraVolumeMounts -- Allow Extra volume mounts into the deployment
  extraVolumeMounts: []
  # querierFrontend.extraVolumes -- Allow Extra volumes into the deployment
  extraVolumes: []
  # querierFrontend.tolerations -- Add tolerations for pod assignment
  tolerations: []
  # querierFrontend.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # querierFrontend.affinity -- Replace default affinity with custom affinity
  affinity: {}

tableManager:
  # tableManager.replicaCount -- Number of replicas for the Table-manager deployment.
  replicaCount: 1
  # tableManager.resources -- Custom resources for the Table-manager deployment.
  resources: {}
  # tableManager.env -- Allow Extra env variables into the deployment
  env: []
  # tableManager.extraVolumeMounts -- Allow Extra volume mounts into the deployment
  extraVolumeMounts: []
  # tableManager.extraVolumes -- Allow Extra volumes into the deployment
  extraVolumes: []
  # tableManager.tolerations -- Add tolerations for pod assignment
  tolerations: []
  # tableManager.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # tableManager.affinity -- Replace default affinity with custom affinity
  affinity: {}

canary:
  # canary.enabled -- Enable the Loki-Canary deployment
  enabled: false
  # canary.image -- Which image to use for Loki-Canary
  image: grafana/loki-canary:1.6.1
  # canary.resources -- Custom resources for the Loki-Canary deployment.
  resources: {}
  # canary.tolerations -- Add tolerations for pod assignment
  tolerations: []
  # canary.nodeSelector -- Add Node labels for pod assignment
  nodeSelector: {}
  # canary.affinity -- Replace default affinity with custom affinity
  affinity: {}
  # canary.args -- Allow extra arguments into the container.
  args: []
  # canary.env -- Allow Extra env variables into the deployment
  env: []

serviceMonitor:
  # serviceMonitor.enabled -- Enable service monitors for Loki deployment.
  enabled: false
  # serviceMonitor.interval -- Set interval scraping the targets.
  interval: ""
  # serviceMonitor.additionalLabels -- Set additional labels for the service monitor.
  additionalLabels: {}

# lokiConfig uses the same values provided here:
# https://grafana.com/docs/loki/latest/configuration/
# These values are the defaults for this chart.
# They can be overridden in a parent values file.
lokiConfig:
  auth_enabled: false
  chunk_store_config:
    chunk_cache_config:
      memcached:
        batch_size: 100
        parallelism: 100
      memcached_client:
        consistent_hash: true
        service: memcached-client
    max_look_back_period: 0
    write_dedupe_cache_config:
      memcached:
        batch_size: 100
        parallelism: 100
      memcached_client:
        consistent_hash: true
        service: memcached-client

  memberlist:
    enable: false
    rejoin_interval: 5m
    bind_port: 7946

  distributor:
    ring:
      kvstore:
        consul:
          consistent_reads: false
          http_client_timeout: 20s
          watch_burst_size: 1
          watch_rate_limit: 1
        store: consul
      heartbeat_timeout: 1m

  frontend:
    compress_responses: true
    max_outstanding_per_tenant: 200

  frontend_worker:
    grpc_client_config:
      max_send_msg_size: 104857600
    parallelism: 10

  ingester:
    chunk_block_size: 262144
    chunk_idle_period: 30m
    chunk_target_size: 0
    chunk_retain_period: 15m
    max_chunk_age: 1h
    lifecycler:
      heartbeat_period: 5s
      interface_names:
        - eth0
      join_after: 30s
      num_tokens: 512
      ring:
        heartbeat_timeout: 1m
        kvstore:
          consul:
            consistent_reads: true
            http_client_timeout: 20s
          store: consul
        replication_factor: 3
    max_transfer_retries: 10

  ingester_client:
    grpc_client_config:
      max_recv_msg_size: 67108864
    remote_timeout: 1s

  limits_config:
    enforce_metric_name: false
    ingestion_burst_size_mb: 20
    ingestion_rate_mb: 10
    ingestion_rate_strategy: global
    max_global_streams_per_user: 10000
    max_query_length: 12000h
    max_query_parallelism: 32
    max_streams_per_user: 0
    reject_old_samples: true
    reject_old_samples_max_age: 168h
    max_entries_limit_per_query: 5000

  querier:
    query_timeout: 1m
    engine:
      timeout: 1m

  query_range:
    align_queries_with_step: true
    cache_results: true
    max_retries: 5
    results_cache:
      cache:
        memcached_client:
          consistent_hash: true
          max_idle_conns: 16
          service: memcached-client
          timeout: 500ms
          update_interval: 1m
      max_freshness: 10m
    split_queries_by_interval: 30m

  schema_config:
    configs:
      - from: "2020-07-21"
        index:
          prefix: index_
        chunks:
          prefix: chunks_
        object_store: gcs
        schema: v11
        store: bigtable

  server:
    graceful_shutdown_timeout: 5s
    grpc_server_max_concurrent_streams: 1000
    grpc_server_max_recv_msg_size: 104857600
    grpc_server_max_send_msg_size: 104857600
    http_listen_port: 3100
    http_server_idle_timeout: 120s
    http_server_write_timeout: 1m
    http_server_read_timeout: 1m
    log_level: info

  storage_config:
    bigtable:
      project: ""
      instance: loki-instance
    gcs:
      bucket_name: modular-loki
    index_queries_cache_config:
      memcached:
        batch_size: 100
        parallelism: 100
      memcached_client:
        consistent_hash: true
        service: memcached-client

  table_manager:
    retention_deletes_enabled: false
    retention_period: 0
