loki:
  # loki.image -- Image repository for Loki images.
  image: grafana/loki:1.4.1
  # loki.pullPolicy -- Image pull policy for Loki images.
  pullPolicy: IfNotPresent

consul:
  # consul.replicaCount -- Number of replicas for the Consul deployment.
  replicaCount: 3
  # consul.image -- Image repository for the Consul images.
  image: consul:1.5.3
  # consul.pullPolicy -- Image pull policy for the Consul images.
  pullPolicy: IfNotPresent
  # consul.resources -- Custom resources for the Consul deployment.
  resources:
    requests:
      cpu: 100m
      memory: 500Mi
  # consul.tolartions -- Add tolartions for pod assginment
  tolarations: []
  # consul.nodeSelector -- Add Node labels for pod assginment
  nodeSelector: {}
  # consul.affinity -- Replace default affinity with custom affinity
  affinity: {}

distributor:
  # distributor.replicaCount -- Number of replicas for the Distributor deployment.
  replicaCount: 3
  # distributor.resources -- Custom resources for the Distributor deployment.
  resources:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 500Mi
  # distributor.env -- Allow Extra env variables into the deployment
  env: []
  # distributor.extraVolumeMounts -- Allow Extra volume mounts into the deployment
  extraVolumeMounts: []
  # distributor.extraVolumes -- Allow Extra volumes into the deployment
  extraVolumes: []
  # distributor.tolartions -- Add tolartions for pod assginment
  tolarations: []
  # distributor.nodeSelector -- Add Node labels for pod assginment
  nodeSelector: {}
  # distributor.affinity -- Replace default affinity with custom affinity
  affinity: {}

gateway:
  # gateway.replicaCount -- Number of replicas for the Gateway deployment.
  replicaCount: 3
  # gateway.image -- Image repository for the Gateway images.
  image: nginx:1.15.1-alpine
  # gateway.pullPolicy -- Image pull policy for the Gateway images.
  pullPolicy: IfNotPresent
  # gateway.resources -- Custom resources for the Gateway deployment.
  resources:
    requests:
      cpu: 50m
      memory: 100Mi
  # gateway.env -- Allow Extra env variables into the deployment
  env: []
  # gateway.extraVolumeMounts -- Allow Extra volume mounts into the deployment
  extraVolumeMounts: []
  # gateway.extraVolumes -- Allow Extra volumes into the deployment
  extraVolumes: []
  service:
    #gateway.service.annotations -- Annotations to apply on gateway service
    annotations: {}
    #gateway.service.type -- Service type
    type: ClusterIP
  ingress:
    # gateway.ingress.enabled -- Enable Ingress for your gateway deployment
    enabled: false
    # gateway.ingress.annotations -- 
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    host: chart-example.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  # gateway.tolartions -- Add tolartions for pod assginment
  tolarations: []
  # gateway.nodeSelector -- Add Node labels for pod assginment
  nodeSelector: {}
  # gateway.affinity -- Replace default affinity with custom affinity
  affinity: {}

ingester:
  # ingester.replicaCount -- Number of replicas for the Ingester deployment.
  replicaCount: 3
  # ingester.resources -- Custom resources for the Ingester deployment.
  resources:
    limits:
      cpu: 2
      memory: 10Gi
    requests:
      cpu: 1
      memory: 5Gi
  # ingester.env -- Allow Extra env variables into the deployment
  env: []
  # ingester.extraVolumeMounts -- Allow Extra volume mounts into the deployment
  extraVolumeMounts: []
  # ingester.extraVolumes -- Allow Extra volumes into the deployment
  extraVolumes: []
  # ingester.trasnferRetries -- Retry transfer chunks when leaving ring
  transferRetries: 10
  # ingester.replicationFactor -- Replication factor between ingesters. Minimal is 1.
  replicationFactor: 2
  # ingester.tolartions -- Add tolartions for pod assginment
  tolarations: []
  # ingester.nodeSelector -- Add Node labels for pod assginment
  nodeSelector: {}
  # ingester.affinity -- Replace default affinity with custom affinity
  affinity: {}

memcached:
  # memcached.replicaCount -- Number of replicas for the Memcached deployment.
  replicaCount: 3
  # memcached.image -- Image repository for the Memcached images.
  image: memcached:1.5.17-alpine
  # memcached.pullPolicy -- Image pull policy for the Memcached images.
  pullPolicy: IfNotPresent
  # memcached.resources -- Custom resources for the Memcached deployment.
  resources:
    limits:
      cpu: 3
      memory: 6Gi
    requests:
      cpu: 500m
      memory: 5Gi
  # memcached.tolartions -- Add tolartions for pod assginment
  tolarations: []
  # memcached.nodeSelector -- Add Node labels for pod assginment
  nodeSelector: {}
  # memcached.affinity -- Replace default affinity with custom affinity
  affinity: {}

memcachedFrontend:
  # memcachedFrontend.replicaCount -- Number of replicas for the Memcached-frontend deployment.
  replicaCount: 3
  # memcachedFrontend.resources -- Custom resources for the Memcached-frontend deployment.
  resources:
    limits:
      cpu: 3
      memory: 1546Mi
    requests:
      cpu: 500m
      memory: 1329Mi
  # memcachedFrontend.tolartions -- Add tolartions for pod assginment
  tolarations: []
  # memcachedFrontend.nodeSelector -- Add Node labels for pod assginment
  nodeSelector: {}
  # memcachedFrontend.affinity -- Replace default affinity with custom affinity
  affinity: {}

memcachedIndexQueries:
  # memcachedIndexQueries.replicaCount -- Number of replicas for the Memcached-index-queries deployment.
  replicaCount: 3
  # memcachedIndexQueries.resources -- Custom resources for the Memcached-index-queries deployment.
  resources:
    limits:
      cpu: 3
      memory: 1536Mi
    requests:
      cpu: 500m
      memory: 1329Mi
  # memcachedIndexQueries.tolartions -- Add tolartions for pod assginment
  tolarations: []
  # memcachedIndexQueries.nodeSelector -- Add Node labels for pod assginment
  nodeSelector: {}
  # memcachedIndexQueries.affinity -- Add custom affinity to deployment
  affinity: {}

memcachedIndexWrites:
  # memcachedIndexWrites.replicaCount -- Number of replicas for the Memcached-index-writes deployment.
  replicaCount: 3
  # memcachedIndexWrites.resources -- Custom resources for the Memcached-index-writes deployment.
  resources:
    limits:
      cpu: 3
      memory: 1536Mi
    requests:
      cpu: 500m
      memory: 1329Mi
  # memcachedIndexWrites.tolartions -- Add tolartions for pod assginment
  tolarations: []
  # memcachedIndexWrites.nodeSelector -- Add Node labels for pod assginment
  nodeSelector: {}
  # memcachedIndexWrites.affinity -- Replace default affinity with custom affinity
  affinity: {}

querier:
  # querier.replicaCount -- Number of replicas for the Querier deployment.
  replicaCount: 3
  # querier.resources -- Custom resources for the Querier deployment.
  resources: {}
  # querier.env -- Allow Extra env variables into the deployment
  env: []
  # querier.extraVolumeMounts -- Allow Extra volume mounts into the deployment
  extraVolumeMounts: []
  # querier.extraVolumes -- Allow Extra volumes into the deployment
  extraVolumes: []
  # querier.tolartions -- Add tolartions for pod assginment
  tolarations: []
  # querier.nodeSelector -- Add Node labels for pod assginment
  nodeSelector: {}
  # querier.affinity -- Replace default affinity with custom affinity
  affinity: {}


querierFrontend:
  # querierFrontend.replicaCount -- Number of replicas for the Querier-frontend deployment.
  replicaCount: 2
  # querierFrontend.resources -- Customer resources for the Querier-frontend deployment.
  resources:
    limits:
      memory: 1200Mi
    requests:
      cpu: "2"
      memory: 600Mi
  # querierFrontend.env -- Allow Extra env variables into the deployment
  env: []
  # querierFrontend.extraVolumeMounts -- Allow Extra volume mounts into the deployment
  extraVolumeMounts: []
  # querierFrontend.extraVolumes -- Allow Extra volumes into the deployment
  extraVolumes: []
  # querierFrontend.tolartions -- Add tolartions for pod assginment
  tolarations: []
  # querierFrontend.nodeSelector -- Add Node labels for pod assginment
  nodeSelector: {}
  # querierFrontend.affinity -- Replace default affinity with custom affinity
  affinity: {}


tableManager:
  # tableManager.replicaCount -- Number of replicas for the Table-manager deployment.
  replicaCount: 1
  # tableManager.resources -- Custom resources for the Table-manager deployment.
  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 100Mi
  # tableManager.env -- Allow Extra env variables into the deployment
  env: []
  # tableManager.extraVolumeMounts -- Allow Extra volume mounts into the deployment
  extraVolumeMounts: []
  # tableManager.extraVolumes -- Allow Extra volumes into the deployment
  extraVolumes: []
  # tableManager.tolartions -- Add tolartions for pod assginment
  tolarations: []
  # tableManager.nodeSelector -- Add Node labels for pod assginment
  nodeSelector: {}
  # tableManager.affinity -- Replace default affinity with custom affinity
  affinity: {}

storage:
  # storage.store -- Type of store to use for you indexes. Currently only cassandra is supported.
  store: cassandra
  # storage.objectstore -- Type of store to use for your chunks. Currently only gcs is supported.
  objectStore: gcs
  config:
    # storage.config.retentionPeriod -- Retention period of storing logs.
    retentionPeriod: 0
    # storage.config.retentionDelete -- Enable the deletion of indexes.
    retentionDelete: false
    # storage.config.storeUrl -- Url of your cassandra instance.
    storeUrl: loki-cassandra.monitoring.svc
    # storage.config.bucketName -- Name of your gcs bucket.
    bucketName: loki_distributed

serviceMonitor:
  # serviceMonitor.enabled -- Enable service monitors for Loki deployment.
  enabled: false
  # serviceMonitor.interval -- Set interval scraping the targets.
  interval: ""
  # serviceMonitor.additionalLabels -- Set additional labels for the service monitor.
  additionalLabels: {}
  # serviceMonitor.scrapeTimeout -- Set time out for scraping.
  # scrapeTimeout: 10s