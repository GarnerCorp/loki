{{ if eq .Values.storage.store "aws-dynamo" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "loki-helm.table-manager" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "loki-helm.labels" . | nindent 4 }}
    app.kubernetes.io/component: table-manager
spec:
  minReadySeconds: 10
  replicas: {{ .Values.tableManager.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels: {{- include "loki-helm.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: table-manager
  template:
    metadata:
      annotations:
        config_hash: 8f80031113ab434770ef7e9215512968
      labels: {{- include "loki-helm.labels" . | nindent 8 }}
        app.kubernetes.io/component: table-manager
    spec:
      containers:
      - args:
        - -config.file=/etc/loki/config/config.yaml
        - -limits.per-user-override-config=/etc/loki/overrides/overrides.yaml
        - -target=table-manager
        image: {{ .Values.loki.image }}
        imagePullPolicy: {{ .Values.loki.pullPolicy | quote }}
        name: table-manager
        ports:
        - containerPort: 3100
          name: http-metrics
        - containerPort: 9095
          name: grpc
        readinessProbe:
          httpGet:
            path: /ready
            port: 3100
          initialDelaySeconds: 15
          timeoutSeconds: 1
        {{- if .Values.tableManager.resources }}
        resources: {{- toYaml .Values.tableManager.resources | nindent 12 }}
        {{- end }}
        volumeMounts:
        - mountPath: /etc/loki/config
          name: loki
      volumes:
      - configMap:
          name: {{ include "loki-helm.fullname" . }}-loki
        name: loki
{{ end }}